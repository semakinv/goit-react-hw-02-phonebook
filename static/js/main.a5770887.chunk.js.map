{"version":3,"sources":["components/ContactForm.module.css","components/App.module.css","components/ContactForm.js","components/Filter.js","components/ContactListItem.js","components/ContactList.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputCange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","inputForm","styles","className","onSubmit","this","type","onChange","Component","Filter","onChangeFilter","ContactListItem","onRemove","onClick","ContactList","contacts","onRemoveContact","map","id","key","App","filter","addContact","contact","uuidv4","prevState","inputedName","find","element","alert","removeContact","ContactId","changeFilter","getVisibleContacts","toLowerCase","includes","shell","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5770887.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"ContactForm_inputForm__3PADU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shell\":\"App_shell__32fbI\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputCange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { inputForm } = styles;\n    return (\n      <>\n        <form className={inputForm} onSubmit={this.handleSubmit}>\n          <label>\n            {' '}\n            <p>Name</p>\n            <input\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleInputCange}\n              name=\"name\"\n            />\n          </label>\n          <label>\n            {' '}\n            <p>Number</p>\n            <input\n              type=\"text\"\n              value={this.state.number}\n              onChange={this.handleInputCange}\n              name=\"number\"\n            />\n          </label>\n          <section>\n            <button type=\"submit\">Add contact</button>\n          </section>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        className=\"TaskEditor-input\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.elementType.isRequired,\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst ContactListItem = ({ name, number, onRemove }) => {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {name}: {number}{' '}\r\n        <button type=\"button\" onClick={onRemove}>\r\n          Delete\r\n        </button>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.elementType.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\nimport ContactListItem from './ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        name={name}\n        number={number}\n        onRemove={() => onRemoveContact(id)}\n      />\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: PropTypes.elementType.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      const inputedName = contact.name;\n      if (inputedName) {\n        function isNamePresent(element) {\n          if (element.name === inputedName) {\n            return true;\n          }\n          return false;\n        }\n\n        if (this.state.contacts.find(isNamePresent)) {\n          return alert(`${inputedName} is alredy in contacts.`);\n        }\n\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      }\n    });\n  };\n\n  removeContact = ContactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== ContactId),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { shell } = styles;\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <div className={shell}>\n          <h1>Phonebook</h1>\n          <ContactForm onAddContact={this.addContact} />\n          <h2>Contacts</h2>\n          {this.state.contacts.length > 1 && (\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          )}\n          {visibleContacts.length > 0 && (\n            <ContactList\n              contacts={visibleContacts}\n              onRemoveContact={this.removeContact}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}